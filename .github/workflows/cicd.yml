name: CICD

on:
  push:
    branches: [ "main" ]


jobs:

  generate-version:
    runs-on: ubuntu-latest
    permissions: 
     contents: write
    steps:
    - uses: actions/checkout@v4
    - name: Github Tag Bump
      id: tag_bump 
      uses: anothrNick/github-tag-action@1.67.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        INITIAL_VERSION: 1.0.4
        DEFAULT_BUMP: patch 

    outputs: 
      new-version: ${{ steps.tag_bump.outputs.new_tag }}

  build-deploy-service:
   runs-on: ubuntu-latest
   needs: generate-version
   env:
     APP_NAME: playeconomyapp
     SERVICE_NAME: trading
     HELM_CHART_VERSION: 0.1.3
   
   permissions:
     id-token: write
     contents: read
   
   steps:
     - uses: actions/checkout@v4

     - name: Azure Login
       uses: Azure/login@v2.3.0
       with:
         client-id: ${{ secrets.AZURE_CLIENT_ID }}
         tenant-id: ${{ secrets.AZURE_TENANT_ID }}
         subscription-id: ${{ secrets.AZURE_SUBSCIPRTION_ID }}

     - name: Login to container registry
       run: az acr login --name ${{env.APP_NAME}}


     - name: Build and push Docker images
       uses: docker/build-push-action@v6.18.0
       with:
         secrets: |
           GH_OWNER=${{ github.repository_owner }}
           GH_PAT=${{ secrets.GH_PAT }}
         tags: "${{ env.APP_NAME }}.azurecr.io/play.${{env.SERVICE_NAME}}:${{ needs.generate-version.outputs.new-version }}"
         push: true

     - name: Get AKS credentials
       run: az aks get-credentials --resource-group ${{ env.APP_NAME }} --name ${{ env.APP_NAME }}

     - name: Helm tool installer
       uses: Azure/setup-helm@v3
       with:
         version: v3.18.3
         token: ${{ secrets.GITHUB_TOKEN }}

     - name: Login to Helm Registry
       run: |
         helmUser="00000000-0000-0000-0000-000000000000"
         helmPassword=$(az acr login --name ${{ env.APP_NAME }} --expose-token --output tsv --query accessToken)
         helm registry login ${{ env.APP_NAME }}.azurecr.io --username $helmUser --password $helmPassword

     - name: Deploy helm chart
       run: |
         helm upgrade ${{env.SERVICE_NAME}}-service oci://${{ env.APP_NAME }}.azurecr.io/helm/microservice \
         --version ${{env.HELM_CHART_VERSION}} \
         -f ./helm/values.yaml \
         -n ${{env.SERVICE_NAME}} \
         --set image.tag=${{ needs.generate-version.outputs.new-version }} \
         --install \
         --wait